{"version":3,"sources":["components/ListItems/ListItems.js","components/AddItems/AddItems.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","sendUsers","deleteUser","ViewItems","length","map","i","className","name","age","onClick","id","Add","state","changed","e","setState","target","value","submitNewUser","preventDefault","addNew","onSubmit","this","type","placeholder","onChange","Component","App","users","all","filter","item","addUser","newUser","Math","random","newUsers","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA2CeA,EAxCF,SAACC,GAEV,IAAQC,EAA0BD,EAA1BC,UAAWC,EAAeF,EAAfE,WAIbC,EAHSF,EAAUG,OAIrBH,EAAUI,KAAI,SAAAC,GACV,OACI,gCAEI,uBAAMC,UAAU,YAAhB,cAA+BD,EAAEE,KAAjC,OACA,uBAAMD,UAAU,YAAhB,cAA+BD,EAAEG,IAAjC,OACA,sBAAMF,UAAU,YAAYG,QAAS,kBAAMR,EAAWI,EAAEK,KAAxD,sBAJML,EAAEK,OAWpB,mBAAGJ,UAAU,WAAb,6CAGJ,OACI,sBAAKA,UAAW,WAAhB,UACI,sBAAKA,UAAU,OAAf,UACI,0CACA,wCACA,6CAIHJ,M,OClCPS,E,4MAEFC,MAAQ,CAEJL,KAAM,GACNC,IAAK,I,EAITK,QAAU,SAACC,GACP,EAAKC,SAAL,eAGKD,EAAEE,OAAON,GAAKI,EAAEE,OAAOC,S,EAGhCC,cAAgB,SAACJ,GAEb,GADAA,EAAEK,iBACyB,KAAxBL,EAAEE,OAAOT,KAAKU,MACb,OAAO,KAEP,EAAKlB,MAAMqB,OAAO,EAAKR,OACvB,EAAKG,SAAS,CACVR,KAAM,GACNC,IAAK,M,4CAKjB,WACI,OACI,qBAAKF,UAAU,MAAf,SACI,uBAAMe,SAAUC,KAAKJ,cAArB,UACI,uBAAOD,MAAOK,KAAKV,MAAML,KAAMgB,KAAK,OAAOC,YAAY,wBAAwBd,GAAG,OAAOe,SAAUH,KAAKT,UAExG,uBAAOI,MAAOK,KAAKV,MAAMJ,IAAKe,KAAK,SAASC,YAAY,qBAAqBd,GAAG,MAAMe,SAAUH,KAAKT,UACrG,uBAAOU,KAAK,SAASN,MAAM,kB,GApC7BS,aA8CHf,IC1CTgB,E,4MAEJf,MAAQ,CACNgB,MAAQ,CACN,CAAElB,GAAI,EAAGH,KAAM,SAAUC,IAAK,IAC9B,CAAEE,GAAI,EAAGH,KAAM,QAASC,IAAK,IAC7B,CAAEE,GAAI,EAAGH,KAAM,aAAcC,IAAK,M,EAKtCP,WAAa,SAACS,GACZ,IAAImB,EAAM,EAAKjB,MAAMgB,MAAME,QAAO,SAAAC,GAChC,OAAOA,EAAKrB,KAAOA,KAErB,EAAKK,SAAS,CACZa,MAAQC,K,EAIZG,QAAS,SAACC,GAERA,EAAQvB,GAAKwB,KAAKC,SAGlB,IAAMC,EAAW,EAAKxB,MAAMgB,MAC5BQ,EAASC,KAAKJ,GAEd,EAAKlB,SAAS,CACZa,MAAQQ,K,4CAIZ,WACE,OACE,sBAAK9B,UAAU,MAAf,UAEE,mDAEA,cAAC,EAAD,CAAMN,UAAWsB,KAAKV,MAAMgB,MAAQ3B,WAAcqB,KAAKrB,aACvD,cAAC,EAAD,CAAKmB,OAASE,KAAKU,iB,GAxCTN,aAgDHC,ICzCAW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6526d749.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst List = (props) => {\r\n\r\n    const { sendUsers, deleteUser } = props;\r\n    const length = sendUsers.length;\r\n\r\n    // if there is a length to the array (there is an items in the array )\r\n    const ViewItems = length ? (\r\n        sendUsers.map(i => {\r\n            return (\r\n                <div key={i.id} >\r\n\r\n                    <span className=\"data-span\" > {i.name} </span>\r\n                    <span className=\"data-span\" > {i.age} </span>\r\n                    <span className=\"data-span\" onClick={() => deleteUser(i.id)} > &times; </span> \r\n\r\n                </div>\r\n            )\r\n        })\r\n        // else  return a div to show that  there is no items to show \r\n    ) : (\r\n        <p className=\"no-items\">There is no items to show here </p>\r\n    )\r\n\r\n    return (\r\n        <div className =\"userList\" >\r\n            <div className=\"head\">\r\n                <span>Course</span>\r\n                <span>Days</span>\r\n                <span>Action</span>\r\n\r\n            </div>\r\n\r\n            {ViewItems}\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nclass Add extends Component {\r\n\r\n    state = {\r\n\r\n        name: '',\r\n        age: ''\r\n\r\n    }\r\n\r\n    changed = (e) => {\r\n        this.setState({\r\n            //here we put [e.target.id] that corresponding to (name && age)\r\n            //then we update its value from '' to be the value of the targeted input\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    submitNewUser = (e) => {\r\n        e.preventDefault();\r\n        if(e.target.name.value === ''){\r\n            return null;\r\n        }else {\r\n            this.props.addNew(this.state);\r\n            this.setState({\r\n                name: '',\r\n                age: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add\">\r\n                <form onSubmit={this.submitNewUser}>\r\n                    <input value={this.state.name} type=\"text\" placeholder=\"Enter Course Name .. \" id=\"name\" onChange={this.changed} />\r\n\r\n                    <input value={this.state.age} type=\"number\" placeholder=\"Enter Duration .. \" id=\"age\" onChange={this.changed} />\r\n                    <input type=\"submit\" value=\"Add \" />\r\n                </form>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Add;\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport List from './components/ListItems/ListItems';\nimport Add from './components/AddItems/AddItems';\n\nclass App extends Component {\n\n  state = {\n    users : [\n      { id: 1, name: 'React ', age: 30 },\n      { id: 2, name: 'Redux', age: 25 },\n      { id: 3, name: 'JavaScript', age: 20 }\n\n    ]\n  }\n\n  deleteUser = (id) => {\n    let all = this.state.users.filter(item =>{\n      return item.id !== id\n    })\n    this.setState({\n      users : all \n    })\n  }\n\n  addUser= (newUser)=>{\n    //verifying a  key for each new user  \n    newUser.id = Math.random();\n\n    //push the new item to the current state\n    const newUsers = this.state.users\n    newUsers.push(newUser)\n\n    this.setState({\n      users : newUsers\n\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n\n        <h1> Simple ToDo App </h1>\n\n        <List sendUsers={this.state.users}  deleteUser = {this.deleteUser} />\n        <Add addNew= {this.addUser} />\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}